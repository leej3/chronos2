name: Unit tests

on:
  push:
    branches: [ feature/test_ci ]
  pull_request:
    branches: [ feature/test_ci ]

jobs:
  edge_server:
    name: Edge Server CI
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install python package manager
      run: |
        python -m pip install --upgrade pip
        pip install uv

    - name: Run edge-server tests
      run: |
        cd edge_server
        uv sync --all-extras
        uv run pytest

  dashboard_backend:
    name: Dashboard backend pytest suite
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Run docker-compose to start services
      run: |
        for f in $(find . -name .env.sample); do cp "$f" "${f%.sample}"; done
        docker compose up -d dashboard_backend edge_server

    - name: Show .env file contents
      run: |
        cat ./chronos2/dashboard_backend/.env
        
    - name: Display PostgreSQL URL
      run: |
        POSTGRES_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}"
        echo "PostgreSQL URL: $POSTGRES_URL"

    - name: Wait for PostgreSQL to be ready
      run: |
        wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
        chmod +x wait-for-it.sh
        ./wait-for-it.sh postgres:5432 --timeout=30 -- echo "PostgreSQL is up"

    - name: Install python package manager
      run: |
        python -m pip install --upgrade pip
        pip install uv
        pip install alembic psycopg2 uvicorn python-dotenv 

    - name: Run Alembic migrations
      run: |
        cd chronos2/dashboard_backend
        alembic upgrade head

    - name: Run dashboard-backend test suite
      run: |
        cd chronos2/dashboard_backend
        uv sync --all-extras
        uv run pytest

  react-ci:
    name: Run frontend test suite
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install React dependencies
      run: cd chronos2/dashboard_frontend && npm install

    - name: Run Jest tests
      run: cd chronos2/dashboard_frontend && npm test -- --coverage

    - name: Build React project
      run: cd chronos2/dashboard_frontend && npm run build
